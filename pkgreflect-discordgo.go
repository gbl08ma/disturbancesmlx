// Code generated by github.com/ungerik/pkgreflect and edited by gbl08ma

package main

import (
	"reflect"

	"github.com/bwmarrin/discordgo"
)

// extpkgDiscordGoTypes contains the types of the discordgo package
var extpkgDiscordGoTypes = map[string]reflect.Type{
	"APIErrorMessage":                  reflect.TypeOf((*discordgo.APIErrorMessage)(nil)).Elem(),
	"Ack":                              reflect.TypeOf((*discordgo.Ack)(nil)).Elem(),
	"Application":                      reflect.TypeOf((*discordgo.Application)(nil)).Elem(),
	"Assets":                           reflect.TypeOf((*discordgo.Assets)(nil)).Elem(),
	"Bucket":                           reflect.TypeOf((*discordgo.Bucket)(nil)).Elem(),
	"Channel":                          reflect.TypeOf((*discordgo.Channel)(nil)).Elem(),
	"ChannelCreate":                    reflect.TypeOf((*discordgo.ChannelCreate)(nil)).Elem(),
	"ChannelDelete":                    reflect.TypeOf((*discordgo.ChannelDelete)(nil)).Elem(),
	"ChannelEdit":                      reflect.TypeOf((*discordgo.ChannelEdit)(nil)).Elem(),
	"ChannelPinsUpdate":                reflect.TypeOf((*discordgo.ChannelPinsUpdate)(nil)).Elem(),
	"ChannelType":                      reflect.TypeOf((*discordgo.ChannelType)(nil)).Elem(),
	"ChannelUpdate":                    reflect.TypeOf((*discordgo.ChannelUpdate)(nil)).Elem(),
	"Connect":                          reflect.TypeOf((*discordgo.Connect)(nil)).Elem(),
	"Disconnect":                       reflect.TypeOf((*discordgo.Disconnect)(nil)).Elem(),
	"Emoji":                            reflect.TypeOf((*discordgo.Emoji)(nil)).Elem(),
	"Event":                            reflect.TypeOf((*discordgo.Event)(nil)).Elem(),
	"EventHandler":                     reflect.TypeOf((*discordgo.EventHandler)(nil)).Elem(),
	"EventInterfaceProvider":           reflect.TypeOf((*discordgo.EventInterfaceProvider)(nil)).Elem(),
	"ExplicitContentFilterLevel":       reflect.TypeOf((*discordgo.ExplicitContentFilterLevel)(nil)).Elem(),
	"File":                             reflect.TypeOf((*discordgo.File)(nil)).Elem(),
	"FriendSourceFlags":                reflect.TypeOf((*discordgo.FriendSourceFlags)(nil)).Elem(),
	"Game":                             reflect.TypeOf((*discordgo.Game)(nil)).Elem(),
	"GameType":                         reflect.TypeOf((*discordgo.GameType)(nil)).Elem(),
	"GatewayBotResponse":               reflect.TypeOf((*discordgo.GatewayBotResponse)(nil)).Elem(),
	"Guild":                            reflect.TypeOf((*discordgo.Guild)(nil)).Elem(),
	"GuildAuditLog":                    reflect.TypeOf((*discordgo.GuildAuditLog)(nil)).Elem(),
	"GuildBan":                         reflect.TypeOf((*discordgo.GuildBan)(nil)).Elem(),
	"GuildBanAdd":                      reflect.TypeOf((*discordgo.GuildBanAdd)(nil)).Elem(),
	"GuildBanRemove":                   reflect.TypeOf((*discordgo.GuildBanRemove)(nil)).Elem(),
	"GuildChannelCreateData":           reflect.TypeOf((*discordgo.GuildChannelCreateData)(nil)).Elem(),
	"GuildCreate":                      reflect.TypeOf((*discordgo.GuildCreate)(nil)).Elem(),
	"GuildDelete":                      reflect.TypeOf((*discordgo.GuildDelete)(nil)).Elem(),
	"GuildEmbed":                       reflect.TypeOf((*discordgo.GuildEmbed)(nil)).Elem(),
	"GuildEmojisUpdate":                reflect.TypeOf((*discordgo.GuildEmojisUpdate)(nil)).Elem(),
	"GuildIntegrationsUpdate":          reflect.TypeOf((*discordgo.GuildIntegrationsUpdate)(nil)).Elem(),
	"GuildMemberAdd":                   reflect.TypeOf((*discordgo.GuildMemberAdd)(nil)).Elem(),
	"GuildMemberRemove":                reflect.TypeOf((*discordgo.GuildMemberRemove)(nil)).Elem(),
	"GuildMemberUpdate":                reflect.TypeOf((*discordgo.GuildMemberUpdate)(nil)).Elem(),
	"GuildMembersChunk":                reflect.TypeOf((*discordgo.GuildMembersChunk)(nil)).Elem(),
	"GuildParams":                      reflect.TypeOf((*discordgo.GuildParams)(nil)).Elem(),
	"GuildRole":                        reflect.TypeOf((*discordgo.GuildRole)(nil)).Elem(),
	"GuildRoleCreate":                  reflect.TypeOf((*discordgo.GuildRoleCreate)(nil)).Elem(),
	"GuildRoleDelete":                  reflect.TypeOf((*discordgo.GuildRoleDelete)(nil)).Elem(),
	"GuildRoleUpdate":                  reflect.TypeOf((*discordgo.GuildRoleUpdate)(nil)).Elem(),
	"GuildUpdate":                      reflect.TypeOf((*discordgo.GuildUpdate)(nil)).Elem(),
	"ICEServer":                        reflect.TypeOf((*discordgo.ICEServer)(nil)).Elem(),
	"Integration":                      reflect.TypeOf((*discordgo.Integration)(nil)).Elem(),
	"IntegrationAccount":               reflect.TypeOf((*discordgo.IntegrationAccount)(nil)).Elem(),
	"Invite":                           reflect.TypeOf((*discordgo.Invite)(nil)).Elem(),
	"Member":                           reflect.TypeOf((*discordgo.Member)(nil)).Elem(),
	"Message":                          reflect.TypeOf((*discordgo.Message)(nil)).Elem(),
	"MessageAck":                       reflect.TypeOf((*discordgo.MessageAck)(nil)).Elem(),
	"MessageAttachment":                reflect.TypeOf((*discordgo.MessageAttachment)(nil)).Elem(),
	"MessageCreate":                    reflect.TypeOf((*discordgo.MessageCreate)(nil)).Elem(),
	"MessageDelete":                    reflect.TypeOf((*discordgo.MessageDelete)(nil)).Elem(),
	"MessageDeleteBulk":                reflect.TypeOf((*discordgo.MessageDeleteBulk)(nil)).Elem(),
	"MessageEdit":                      reflect.TypeOf((*discordgo.MessageEdit)(nil)).Elem(),
	"MessageEmbed":                     reflect.TypeOf((*discordgo.MessageEmbed)(nil)).Elem(),
	"MessageEmbedAuthor":               reflect.TypeOf((*discordgo.MessageEmbedAuthor)(nil)).Elem(),
	"MessageEmbedField":                reflect.TypeOf((*discordgo.MessageEmbedField)(nil)).Elem(),
	"MessageEmbedFooter":               reflect.TypeOf((*discordgo.MessageEmbedFooter)(nil)).Elem(),
	"MessageEmbedImage":                reflect.TypeOf((*discordgo.MessageEmbedImage)(nil)).Elem(),
	"MessageEmbedProvider":             reflect.TypeOf((*discordgo.MessageEmbedProvider)(nil)).Elem(),
	"MessageEmbedThumbnail":            reflect.TypeOf((*discordgo.MessageEmbedThumbnail)(nil)).Elem(),
	"MessageEmbedVideo":                reflect.TypeOf((*discordgo.MessageEmbedVideo)(nil)).Elem(),
	"MessageReaction":                  reflect.TypeOf((*discordgo.MessageReaction)(nil)).Elem(),
	"MessageReactionAdd":               reflect.TypeOf((*discordgo.MessageReactionAdd)(nil)).Elem(),
	"MessageReactionRemove":            reflect.TypeOf((*discordgo.MessageReactionRemove)(nil)).Elem(),
	"MessageReactionRemoveAll":         reflect.TypeOf((*discordgo.MessageReactionRemoveAll)(nil)).Elem(),
	"MessageReactions":                 reflect.TypeOf((*discordgo.MessageReactions)(nil)).Elem(),
	"MessageSend":                      reflect.TypeOf((*discordgo.MessageSend)(nil)).Elem(),
	"MessageType":                      reflect.TypeOf((*discordgo.MessageType)(nil)).Elem(),
	"MessageUpdate":                    reflect.TypeOf((*discordgo.MessageUpdate)(nil)).Elem(),
	"MfaLevel":                         reflect.TypeOf((*discordgo.MfaLevel)(nil)).Elem(),
	"Packet":                           reflect.TypeOf((*discordgo.Packet)(nil)).Elem(),
	"PermissionOverwrite":              reflect.TypeOf((*discordgo.PermissionOverwrite)(nil)).Elem(),
	"Presence":                         reflect.TypeOf((*discordgo.Presence)(nil)).Elem(),
	"PresenceUpdate":                   reflect.TypeOf((*discordgo.PresenceUpdate)(nil)).Elem(),
	"PresencesReplace":                 reflect.TypeOf((*discordgo.PresencesReplace)(nil)).Elem(),
	"RESTError":                        reflect.TypeOf((*discordgo.RESTError)(nil)).Elem(),
	"RateLimit":                        reflect.TypeOf((*discordgo.RateLimit)(nil)).Elem(),
	"RateLimiter":                      reflect.TypeOf((*discordgo.RateLimiter)(nil)).Elem(),
	"ReadState":                        reflect.TypeOf((*discordgo.ReadState)(nil)).Elem(),
	"Ready":                            reflect.TypeOf((*discordgo.Ready)(nil)).Elem(),
	"Relationship":                     reflect.TypeOf((*discordgo.Relationship)(nil)).Elem(),
	"RelationshipAdd":                  reflect.TypeOf((*discordgo.RelationshipAdd)(nil)).Elem(),
	"RelationshipRemove":               reflect.TypeOf((*discordgo.RelationshipRemove)(nil)).Elem(),
	"Resumed":                          reflect.TypeOf((*discordgo.Resumed)(nil)).Elem(),
	"Role":                             reflect.TypeOf((*discordgo.Role)(nil)).Elem(),
	"Roles":                            reflect.TypeOf((*discordgo.Roles)(nil)).Elem(),
	"Session":                          reflect.TypeOf((*discordgo.Session)(nil)).Elem(),
	"Settings":                         reflect.TypeOf((*discordgo.Settings)(nil)).Elem(),
	"State":                            reflect.TypeOf((*discordgo.State)(nil)).Elem(),
	"Status":                           reflect.TypeOf((*discordgo.Status)(nil)).Elem(),
	"TimeStamps":                       reflect.TypeOf((*discordgo.TimeStamps)(nil)).Elem(),
	"Timestamp":                        reflect.TypeOf((*discordgo.Timestamp)(nil)).Elem(),
	"TooManyRequests":                  reflect.TypeOf((*discordgo.TooManyRequests)(nil)).Elem(),
	"TypingStart":                      reflect.TypeOf((*discordgo.TypingStart)(nil)).Elem(),
	"UpdateStatusData":                 reflect.TypeOf((*discordgo.UpdateStatusData)(nil)).Elem(),
	"User":                             reflect.TypeOf((*discordgo.User)(nil)).Elem(),
	"UserConnection":                   reflect.TypeOf((*discordgo.UserConnection)(nil)).Elem(),
	"UserGuild":                        reflect.TypeOf((*discordgo.UserGuild)(nil)).Elem(),
	"UserGuildSettings":                reflect.TypeOf((*discordgo.UserGuildSettings)(nil)).Elem(),
	"UserGuildSettingsChannelOverride": reflect.TypeOf((*discordgo.UserGuildSettingsChannelOverride)(nil)).Elem(),
	"UserGuildSettingsEdit":            reflect.TypeOf((*discordgo.UserGuildSettingsEdit)(nil)).Elem(),
	"UserGuildSettingsUpdate":          reflect.TypeOf((*discordgo.UserGuildSettingsUpdate)(nil)).Elem(),
	"UserNoteUpdate":                   reflect.TypeOf((*discordgo.UserNoteUpdate)(nil)).Elem(),
	"UserSettingsUpdate":               reflect.TypeOf((*discordgo.UserSettingsUpdate)(nil)).Elem(),
	"UserUpdate":                       reflect.TypeOf((*discordgo.UserUpdate)(nil)).Elem(),
	"VerificationLevel":                reflect.TypeOf((*discordgo.VerificationLevel)(nil)).Elem(),
	"VoiceConnection":                  reflect.TypeOf((*discordgo.VoiceConnection)(nil)).Elem(),
	"VoiceICE":                         reflect.TypeOf((*discordgo.VoiceICE)(nil)).Elem(),
	"VoiceRegion":                      reflect.TypeOf((*discordgo.VoiceRegion)(nil)).Elem(),
	"VoiceServerUpdate":                reflect.TypeOf((*discordgo.VoiceServerUpdate)(nil)).Elem(),
	"VoiceSpeakingUpdate":              reflect.TypeOf((*discordgo.VoiceSpeakingUpdate)(nil)).Elem(),
	"VoiceSpeakingUpdateHandler":       reflect.TypeOf((*discordgo.VoiceSpeakingUpdateHandler)(nil)).Elem(),
	"VoiceState":                       reflect.TypeOf((*discordgo.VoiceState)(nil)).Elem(),
	"VoiceStateUpdate":                 reflect.TypeOf((*discordgo.VoiceStateUpdate)(nil)).Elem(),
	"Webhook":                          reflect.TypeOf((*discordgo.Webhook)(nil)).Elem(),
	"WebhookParams":                    reflect.TypeOf((*discordgo.WebhookParams)(nil)).Elem(),
	"WebhooksUpdate":                   reflect.TypeOf((*discordgo.WebhooksUpdate)(nil)).Elem(),
}

// extpkgDiscordGoFunctions contains the functions of the discordgo package
var extpkgDiscordGoFunctions = map[string]reflect.Value{
	"New":            reflect.ValueOf(discordgo.New),
	"NewMessageEdit": reflect.ValueOf(discordgo.NewMessageEdit),
	"NewRatelimiter": reflect.ValueOf(discordgo.NewRatelimiter),
	"NewState":       reflect.ValueOf(discordgo.NewState),
}

// extpkgDiscordGoVariables contains the functions of the discordgo package
var extpkgDiscordGoVariables = map[string]reflect.Value{
	"APIVersion":                        reflect.ValueOf(&discordgo.APIVersion),
	"EndpointAPI":                       reflect.ValueOf(&discordgo.EndpointAPI),
	"EndpointApplication":               reflect.ValueOf(&discordgo.EndpointApplication),
	"EndpointApplications":              reflect.ValueOf(&discordgo.EndpointApplications),
	"EndpointApplicationsBot":           reflect.ValueOf(&discordgo.EndpointApplicationsBot),
	"EndpointAuth":                      reflect.ValueOf(&discordgo.EndpointAuth),
	"EndpointCDN":                       reflect.ValueOf(&discordgo.EndpointCDN),
	"EndpointCDNAttachments":            reflect.ValueOf(&discordgo.EndpointCDNAttachments),
	"EndpointCDNAvatars":                reflect.ValueOf(&discordgo.EndpointCDNAvatars),
	"EndpointCDNChannelIcons":           reflect.ValueOf(&discordgo.EndpointCDNChannelIcons),
	"EndpointCDNIcons":                  reflect.ValueOf(&discordgo.EndpointCDNIcons),
	"EndpointCDNSplashes":               reflect.ValueOf(&discordgo.EndpointCDNSplashes),
	"EndpointChannel":                   reflect.ValueOf(&discordgo.EndpointChannel),
	"EndpointChannelInvites":            reflect.ValueOf(&discordgo.EndpointChannelInvites),
	"EndpointChannelMessage":            reflect.ValueOf(&discordgo.EndpointChannelMessage),
	"EndpointChannelMessageAck":         reflect.ValueOf(&discordgo.EndpointChannelMessageAck),
	"EndpointChannelMessagePin":         reflect.ValueOf(&discordgo.EndpointChannelMessagePin),
	"EndpointChannelMessages":           reflect.ValueOf(&discordgo.EndpointChannelMessages),
	"EndpointChannelMessagesBulkDelete": reflect.ValueOf(&discordgo.EndpointChannelMessagesBulkDelete),
	"EndpointChannelMessagesPins":       reflect.ValueOf(&discordgo.EndpointChannelMessagesPins),
	"EndpointChannelPermission":         reflect.ValueOf(&discordgo.EndpointChannelPermission),
	"EndpointChannelPermissions":        reflect.ValueOf(&discordgo.EndpointChannelPermissions),
	"EndpointChannelTyping":             reflect.ValueOf(&discordgo.EndpointChannelTyping),
	"EndpointChannelWebhooks":           reflect.ValueOf(&discordgo.EndpointChannelWebhooks),
	"EndpointChannels":                  reflect.ValueOf(&discordgo.EndpointChannels),
	"EndpointDefaultUserAvatar":         reflect.ValueOf(&discordgo.EndpointDefaultUserAvatar),
	"EndpointDiscord":                   reflect.ValueOf(&discordgo.EndpointDiscord),
	"EndpointEmoji":                     reflect.ValueOf(&discordgo.EndpointEmoji),
	"EndpointEmojiAnimated":             reflect.ValueOf(&discordgo.EndpointEmojiAnimated),
	"EndpointForgotPassword":            reflect.ValueOf(&discordgo.EndpointForgotPassword),
	"EndpointGateway":                   reflect.ValueOf(&discordgo.EndpointGateway),
	"EndpointGatewayBot":                reflect.ValueOf(&discordgo.EndpointGatewayBot),
	"EndpointGroupIcon":                 reflect.ValueOf(&discordgo.EndpointGroupIcon),
	"EndpointGuild":                     reflect.ValueOf(&discordgo.EndpointGuild),
	"EndpointGuildAuditLogs":            reflect.ValueOf(&discordgo.EndpointGuildAuditLogs),
	"EndpointGuildBan":                  reflect.ValueOf(&discordgo.EndpointGuildBan),
	"EndpointGuildBans":                 reflect.ValueOf(&discordgo.EndpointGuildBans),
	"EndpointGuildChannels":             reflect.ValueOf(&discordgo.EndpointGuildChannels),
	"EndpointGuildCreate":               reflect.ValueOf(&discordgo.EndpointGuildCreate),
	"EndpointGuildEmbed":                reflect.ValueOf(&discordgo.EndpointGuildEmbed),
	"EndpointGuildEmoji":                reflect.ValueOf(&discordgo.EndpointGuildEmoji),
	"EndpointGuildEmojis":               reflect.ValueOf(&discordgo.EndpointGuildEmojis),
	"EndpointGuildIcon":                 reflect.ValueOf(&discordgo.EndpointGuildIcon),
	"EndpointGuildIntegration":          reflect.ValueOf(&discordgo.EndpointGuildIntegration),
	"EndpointGuildIntegrationSync":      reflect.ValueOf(&discordgo.EndpointGuildIntegrationSync),
	"EndpointGuildIntegrations":         reflect.ValueOf(&discordgo.EndpointGuildIntegrations),
	"EndpointGuildInvites":              reflect.ValueOf(&discordgo.EndpointGuildInvites),
	"EndpointGuildMember":               reflect.ValueOf(&discordgo.EndpointGuildMember),
	"EndpointGuildMemberRole":           reflect.ValueOf(&discordgo.EndpointGuildMemberRole),
	"EndpointGuildMembers":              reflect.ValueOf(&discordgo.EndpointGuildMembers),
	"EndpointGuildPrune":                reflect.ValueOf(&discordgo.EndpointGuildPrune),
	"EndpointGuildRole":                 reflect.ValueOf(&discordgo.EndpointGuildRole),
	"EndpointGuildRoles":                reflect.ValueOf(&discordgo.EndpointGuildRoles),
	"EndpointGuildSplash":               reflect.ValueOf(&discordgo.EndpointGuildSplash),
	"EndpointGuildWebhooks":             reflect.ValueOf(&discordgo.EndpointGuildWebhooks),
	"EndpointGuilds":                    reflect.ValueOf(&discordgo.EndpointGuilds),
	"EndpointIntegrations":              reflect.ValueOf(&discordgo.EndpointIntegrations),
	"EndpointIntegrationsJoin":          reflect.ValueOf(&discordgo.EndpointIntegrationsJoin),
	"EndpointInvite":                    reflect.ValueOf(&discordgo.EndpointInvite),
	"EndpointLogin":                     reflect.ValueOf(&discordgo.EndpointLogin),
	"EndpointLogout":                    reflect.ValueOf(&discordgo.EndpointLogout),
	"EndpointMessageReaction":           reflect.ValueOf(&discordgo.EndpointMessageReaction),
	"EndpointMessageReactions":          reflect.ValueOf(&discordgo.EndpointMessageReactions),
	"EndpointMessageReactionsAll":       reflect.ValueOf(&discordgo.EndpointMessageReactionsAll),
	"EndpointOauth2":                    reflect.ValueOf(&discordgo.EndpointOauth2),
	"EndpointRegister":                  reflect.ValueOf(&discordgo.EndpointRegister),
	"EndpointRelationship":              reflect.ValueOf(&discordgo.EndpointRelationship),
	"EndpointRelationships":             reflect.ValueOf(&discordgo.EndpointRelationships),
	"EndpointRelationshipsMutual":       reflect.ValueOf(&discordgo.EndpointRelationshipsMutual),
	"EndpointReport":                    reflect.ValueOf(&discordgo.EndpointReport),
	"EndpointResetPassword":             reflect.ValueOf(&discordgo.EndpointResetPassword),
	"EndpointSm":                        reflect.ValueOf(&discordgo.EndpointSm),
	"EndpointSmActive":                  reflect.ValueOf(&discordgo.EndpointSmActive),
	"EndpointSmUpcoming":                reflect.ValueOf(&discordgo.EndpointSmUpcoming),
	"EndpointSso":                       reflect.ValueOf(&discordgo.EndpointSso),
	"EndpointStatus":                    reflect.ValueOf(&discordgo.EndpointStatus),
	"EndpointTrack":                     reflect.ValueOf(&discordgo.EndpointTrack),
	"EndpointTutorial":                  reflect.ValueOf(&discordgo.EndpointTutorial),
	"EndpointTutorialIndicators":        reflect.ValueOf(&discordgo.EndpointTutorialIndicators),
	"EndpointUser":                      reflect.ValueOf(&discordgo.EndpointUser),
	"EndpointUserAvatar":                reflect.ValueOf(&discordgo.EndpointUserAvatar),
	"EndpointUserAvatarAnimated":        reflect.ValueOf(&discordgo.EndpointUserAvatarAnimated),
	"EndpointUserChannels":              reflect.ValueOf(&discordgo.EndpointUserChannels),
	"EndpointUserConnections":           reflect.ValueOf(&discordgo.EndpointUserConnections),
	"EndpointUserDevices":               reflect.ValueOf(&discordgo.EndpointUserDevices),
	"EndpointUserGuild":                 reflect.ValueOf(&discordgo.EndpointUserGuild),
	"EndpointUserGuildSettings":         reflect.ValueOf(&discordgo.EndpointUserGuildSettings),
	"EndpointUserGuilds":                reflect.ValueOf(&discordgo.EndpointUserGuilds),
	"EndpointUserNotes":                 reflect.ValueOf(&discordgo.EndpointUserNotes),
	"EndpointUserSettings":              reflect.ValueOf(&discordgo.EndpointUserSettings),
	"EndpointUsers":                     reflect.ValueOf(&discordgo.EndpointUsers),
	"EndpointVerify":                    reflect.ValueOf(&discordgo.EndpointVerify),
	"EndpointVerifyResend":              reflect.ValueOf(&discordgo.EndpointVerifyResend),
	"EndpointVoice":                     reflect.ValueOf(&discordgo.EndpointVoice),
	"EndpointVoiceIce":                  reflect.ValueOf(&discordgo.EndpointVoiceIce),
	"EndpointVoiceRegions":              reflect.ValueOf(&discordgo.EndpointVoiceRegions),
	"EndpointWebhook":                   reflect.ValueOf(&discordgo.EndpointWebhook),
	"EndpointWebhookToken":              reflect.ValueOf(&discordgo.EndpointWebhookToken),
	"EndpointWebhooks":                  reflect.ValueOf(&discordgo.EndpointWebhooks),
	"ErrGuildNoIcon":                    reflect.ValueOf(&discordgo.ErrGuildNoIcon),
	"ErrGuildNoSplash":                  reflect.ValueOf(&discordgo.ErrGuildNoSplash),
	"ErrJSONUnmarshal":                  reflect.ValueOf(&discordgo.ErrJSONUnmarshal),
	"ErrMFA":                            reflect.ValueOf(&discordgo.ErrMFA),
	"ErrNilState":                       reflect.ValueOf(&discordgo.ErrNilState),
	"ErrPruneDaysBounds":                reflect.ValueOf(&discordgo.ErrPruneDaysBounds),
	"ErrStateNotFound":                  reflect.ValueOf(&discordgo.ErrStateNotFound),
	"ErrStatusOffline":                  reflect.ValueOf(&discordgo.ErrStatusOffline),
	"ErrUnauthorized":                   reflect.ValueOf(&discordgo.ErrUnauthorized),
	"ErrVerificationLevelBounds":        reflect.ValueOf(&discordgo.ErrVerificationLevelBounds),
	"ErrWSAlreadyOpen":                  reflect.ValueOf(&discordgo.ErrWSAlreadyOpen),
	"ErrWSNotFound":                     reflect.ValueOf(&discordgo.ErrWSNotFound),
	"ErrWSShardBounds":                  reflect.ValueOf(&discordgo.ErrWSShardBounds),
	"Logger":                            reflect.ValueOf(&discordgo.Logger),
}

// extpkgDiscordGoConsts contains the functions of the discordgo package
var extpkgDiscordGoConsts = map[string]reflect.Value{
	"AuditLogActionChannelCreate":                      reflect.ValueOf(discordgo.AuditLogActionChannelCreate),
	"AuditLogActionChannelDelete":                      reflect.ValueOf(discordgo.AuditLogActionChannelDelete),
	"AuditLogActionChannelOverwriteCreate":             reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteCreate),
	"AuditLogActionChannelOverwriteDelete":             reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteDelete),
	"AuditLogActionChannelOverwriteUpdate":             reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteUpdate),
	"AuditLogActionChannelUpdate":                      reflect.ValueOf(discordgo.AuditLogActionChannelUpdate),
	"AuditLogActionEmojiCreate":                        reflect.ValueOf(discordgo.AuditLogActionEmojiCreate),
	"AuditLogActionEmojiDelete":                        reflect.ValueOf(discordgo.AuditLogActionEmojiDelete),
	"AuditLogActionEmojiUpdate":                        reflect.ValueOf(discordgo.AuditLogActionEmojiUpdate),
	"AuditLogActionGuildUpdate":                        reflect.ValueOf(discordgo.AuditLogActionGuildUpdate),
	"AuditLogActionInviteCreate":                       reflect.ValueOf(discordgo.AuditLogActionInviteCreate),
	"AuditLogActionInviteDelete":                       reflect.ValueOf(discordgo.AuditLogActionInviteDelete),
	"AuditLogActionInviteUpdate":                       reflect.ValueOf(discordgo.AuditLogActionInviteUpdate),
	"AuditLogActionMemberBanAdd":                       reflect.ValueOf(discordgo.AuditLogActionMemberBanAdd),
	"AuditLogActionMemberBanRemove":                    reflect.ValueOf(discordgo.AuditLogActionMemberBanRemove),
	"AuditLogActionMemberKick":                         reflect.ValueOf(discordgo.AuditLogActionMemberKick),
	"AuditLogActionMemberPrune":                        reflect.ValueOf(discordgo.AuditLogActionMemberPrune),
	"AuditLogActionMemberRoleUpdate":                   reflect.ValueOf(discordgo.AuditLogActionMemberRoleUpdate),
	"AuditLogActionMemberUpdate":                       reflect.ValueOf(discordgo.AuditLogActionMemberUpdate),
	"AuditLogActionMessageDelete":                      reflect.ValueOf(discordgo.AuditLogActionMessageDelete),
	"AuditLogActionRoleCreate":                         reflect.ValueOf(discordgo.AuditLogActionRoleCreate),
	"AuditLogActionRoleDelete":                         reflect.ValueOf(discordgo.AuditLogActionRoleDelete),
	"AuditLogActionRoleUpdate":                         reflect.ValueOf(discordgo.AuditLogActionRoleUpdate),
	"AuditLogActionWebhookCreate":                      reflect.ValueOf(discordgo.AuditLogActionWebhookCreate),
	"AuditLogActionWebhookDelete":                      reflect.ValueOf(discordgo.AuditLogActionWebhookDelete),
	"AuditLogActionWebhookUpdate":                      reflect.ValueOf(discordgo.AuditLogActionWebhookUpdate),
	"ChannelTypeDM":                                    reflect.ValueOf(discordgo.ChannelTypeDM),
	"ChannelTypeGroupDM":                               reflect.ValueOf(discordgo.ChannelTypeGroupDM),
	"ChannelTypeGuildCategory":                         reflect.ValueOf(discordgo.ChannelTypeGuildCategory),
	"ChannelTypeGuildText":                             reflect.ValueOf(discordgo.ChannelTypeGuildText),
	"ChannelTypeGuildVoice":                            reflect.ValueOf(discordgo.ChannelTypeGuildVoice),
	"ErrCodeBotsCannotUseEndpoint":                     reflect.ValueOf(discordgo.ErrCodeBotsCannotUseEndpoint),
	"ErrCodeCanOnlyPinMessageToOriginatingChannel":     reflect.ValueOf(discordgo.ErrCodeCanOnlyPinMessageToOriginatingChannel),
	"ErrCodeCannotEditFromAnotherUser":                 reflect.ValueOf(discordgo.ErrCodeCannotEditFromAnotherUser),
	"ErrCodeCannotExecuteActionOnDMChannel":            reflect.ValueOf(discordgo.ErrCodeCannotExecuteActionOnDMChannel),
	"ErrCodeCannotExecuteActionOnSystemMessage":        reflect.ValueOf(discordgo.ErrCodeCannotExecuteActionOnSystemMessage),
	"ErrCodeCannotSendEmptyMessage":                    reflect.ValueOf(discordgo.ErrCodeCannotSendEmptyMessage),
	"ErrCodeCannotSendMessagesInVoiceChannel":          reflect.ValueOf(discordgo.ErrCodeCannotSendMessagesInVoiceChannel),
	"ErrCodeCannotSendMessagesToThisUser":              reflect.ValueOf(discordgo.ErrCodeCannotSendMessagesToThisUser),
	"ErrCodeChannelVerificationLevelTooHigh":           reflect.ValueOf(discordgo.ErrCodeChannelVerificationLevelTooHigh),
	"ErrCodeEmbedCisabled":                             reflect.ValueOf(discordgo.ErrCodeEmbedCisabled),
	"ErrCodeInvalidAccountType":                        reflect.ValueOf(discordgo.ErrCodeInvalidAccountType),
	"ErrCodeInvalidAuthenticationToken":                reflect.ValueOf(discordgo.ErrCodeInvalidAuthenticationToken),
	"ErrCodeInvalidFormBody":                           reflect.ValueOf(discordgo.ErrCodeInvalidFormBody),
	"ErrCodeInvalidOAuthState":                         reflect.ValueOf(discordgo.ErrCodeInvalidOAuthState),
	"ErrCodeInviteAcceptedToGuildApplicationsBotNotIn": reflect.ValueOf(discordgo.ErrCodeInviteAcceptedToGuildApplicationsBotNotIn),
	"ErrCodeMaximumFriendsReached":                     reflect.ValueOf(discordgo.ErrCodeMaximumFriendsReached),
	"ErrCodeMaximumGuildRolesReached":                  reflect.ValueOf(discordgo.ErrCodeMaximumGuildRolesReached),
	"ErrCodeMaximumGuildsReached":                      reflect.ValueOf(discordgo.ErrCodeMaximumGuildsReached),
	"ErrCodeMaximumPinsReached":                        reflect.ValueOf(discordgo.ErrCodeMaximumPinsReached),
	"ErrCodeMessageProvidedTooOldForBulkDelete":        reflect.ValueOf(discordgo.ErrCodeMessageProvidedTooOldForBulkDelete),
	"ErrCodeMissingAccess":                             reflect.ValueOf(discordgo.ErrCodeMissingAccess),
	"ErrCodeMissingPermissions":                        reflect.ValueOf(discordgo.ErrCodeMissingPermissions),
	"ErrCodeNoteTooLong":                               reflect.ValueOf(discordgo.ErrCodeNoteTooLong),
	"ErrCodeOAuth2ApplicationDoesNotHaveBot":           reflect.ValueOf(discordgo.ErrCodeOAuth2ApplicationDoesNotHaveBot),
	"ErrCodeOAuth2ApplicationLimitReached":             reflect.ValueOf(discordgo.ErrCodeOAuth2ApplicationLimitReached),
	"ErrCodeOnlyBotsCanUseEndpoint":                    reflect.ValueOf(discordgo.ErrCodeOnlyBotsCanUseEndpoint),
	"ErrCodeReactionBlocked":                           reflect.ValueOf(discordgo.ErrCodeReactionBlocked),
	"ErrCodeTooFewOrTooManyMessagesToDelete":           reflect.ValueOf(discordgo.ErrCodeTooFewOrTooManyMessagesToDelete),
	"ErrCodeTooManyReactions":                          reflect.ValueOf(discordgo.ErrCodeTooManyReactions),
	"ErrCodeUnauthorized":                              reflect.ValueOf(discordgo.ErrCodeUnauthorized),
	"ErrCodeUnknownAccount":                            reflect.ValueOf(discordgo.ErrCodeUnknownAccount),
	"ErrCodeUnknownApplication":                        reflect.ValueOf(discordgo.ErrCodeUnknownApplication),
	"ErrCodeUnknownChannel":                            reflect.ValueOf(discordgo.ErrCodeUnknownChannel),
	"ErrCodeUnknownEmoji":                              reflect.ValueOf(discordgo.ErrCodeUnknownEmoji),
	"ErrCodeUnknownGuild":                              reflect.ValueOf(discordgo.ErrCodeUnknownGuild),
	"ErrCodeUnknownIntegration":                        reflect.ValueOf(discordgo.ErrCodeUnknownIntegration),
	"ErrCodeUnknownInvite":                             reflect.ValueOf(discordgo.ErrCodeUnknownInvite),
	"ErrCodeUnknownMember":                             reflect.ValueOf(discordgo.ErrCodeUnknownMember),
	"ErrCodeUnknownMessage":                            reflect.ValueOf(discordgo.ErrCodeUnknownMessage),
	"ErrCodeUnknownOverwrite":                          reflect.ValueOf(discordgo.ErrCodeUnknownOverwrite),
	"ErrCodeUnknownProvider":                           reflect.ValueOf(discordgo.ErrCodeUnknownProvider),
	"ErrCodeUnknownRole":                               reflect.ValueOf(discordgo.ErrCodeUnknownRole),
	"ErrCodeUnknownToken":                              reflect.ValueOf(discordgo.ErrCodeUnknownToken),
	"ErrCodeUnknownUser":                               reflect.ValueOf(discordgo.ErrCodeUnknownUser),
	"ErrCodeUnknownWebhook":                            reflect.ValueOf(discordgo.ErrCodeUnknownWebhook),
	"ExplicitContentFilterAllMembers":                  reflect.ValueOf(discordgo.ExplicitContentFilterAllMembers),
	"ExplicitContentFilterDisabled":                    reflect.ValueOf(discordgo.ExplicitContentFilterDisabled),
	"ExplicitContentFilterMembersWithoutRoles":         reflect.ValueOf(discordgo.ExplicitContentFilterMembersWithoutRoles),
	"FailedHeartbeatAcks":                              reflect.ValueOf(discordgo.FailedHeartbeatAcks),
	"GameTypeGame":                                     reflect.ValueOf(discordgo.GameTypeGame),
	"GameTypeListening":                                reflect.ValueOf(discordgo.GameTypeListening),
	"GameTypeStreaming":                                reflect.ValueOf(discordgo.GameTypeStreaming),
	"GameTypeWatching":                                 reflect.ValueOf(discordgo.GameTypeWatching),
	"LogDebug":                                         reflect.ValueOf(discordgo.LogDebug),
	"LogError":                                         reflect.ValueOf(discordgo.LogError),
	"LogInformational":                                 reflect.ValueOf(discordgo.LogInformational),
	"LogWarning":                                       reflect.ValueOf(discordgo.LogWarning),
	"MessageTypeCall":                                  reflect.ValueOf(discordgo.MessageTypeCall),
	"MessageTypeChannelIconChange":                     reflect.ValueOf(discordgo.MessageTypeChannelIconChange),
	"MessageTypeChannelNameChange":                     reflect.ValueOf(discordgo.MessageTypeChannelNameChange),
	"MessageTypeChannelPinnedMessage":                  reflect.ValueOf(discordgo.MessageTypeChannelPinnedMessage),
	"MessageTypeDefault":                               reflect.ValueOf(discordgo.MessageTypeDefault),
	"MessageTypeGuildMemberJoin":                       reflect.ValueOf(discordgo.MessageTypeGuildMemberJoin),
	"MessageTypeRecipientAdd":                          reflect.ValueOf(discordgo.MessageTypeRecipientAdd),
	"MessageTypeRecipientRemove":                       reflect.ValueOf(discordgo.MessageTypeRecipientRemove),
	"MfaLevelElevated":                                 reflect.ValueOf(discordgo.MfaLevelElevated),
	"MfaLevelNone":                                     reflect.ValueOf(discordgo.MfaLevelNone),
	"PermissionAddReactions":                           reflect.ValueOf(discordgo.PermissionAddReactions),
	"PermissionAdministrator":                          reflect.ValueOf(discordgo.PermissionAdministrator),
	"PermissionAll":                                    reflect.ValueOf(discordgo.PermissionAll),
	"PermissionAllChannel":                             reflect.ValueOf(discordgo.PermissionAllChannel),
	"PermissionAllText":                                reflect.ValueOf(discordgo.PermissionAllText),
	"PermissionAllVoice":                               reflect.ValueOf(discordgo.PermissionAllVoice),
	"PermissionAttachFiles":                            reflect.ValueOf(discordgo.PermissionAttachFiles),
	"PermissionBanMembers":                             reflect.ValueOf(discordgo.PermissionBanMembers),
	"PermissionChangeNickname":                         reflect.ValueOf(discordgo.PermissionChangeNickname),
	"PermissionCreateInstantInvite":                    reflect.ValueOf(discordgo.PermissionCreateInstantInvite),
	"PermissionEmbedLinks":                             reflect.ValueOf(discordgo.PermissionEmbedLinks),
	"PermissionKickMembers":                            reflect.ValueOf(discordgo.PermissionKickMembers),
	"PermissionManageChannels":                         reflect.ValueOf(discordgo.PermissionManageChannels),
	"PermissionManageEmojis":                           reflect.ValueOf(discordgo.PermissionManageEmojis),
	"PermissionManageMessages":                         reflect.ValueOf(discordgo.PermissionManageMessages),
	"PermissionManageNicknames":                        reflect.ValueOf(discordgo.PermissionManageNicknames),
	"PermissionManageRoles":                            reflect.ValueOf(discordgo.PermissionManageRoles),
	"PermissionManageServer":                           reflect.ValueOf(discordgo.PermissionManageServer),
	"PermissionManageWebhooks":                         reflect.ValueOf(discordgo.PermissionManageWebhooks),
	"PermissionMentionEveryone":                        reflect.ValueOf(discordgo.PermissionMentionEveryone),
	"PermissionReadMessageHistory":                     reflect.ValueOf(discordgo.PermissionReadMessageHistory),
	"PermissionReadMessages":                           reflect.ValueOf(discordgo.PermissionReadMessages),
	"PermissionSendMessages":                           reflect.ValueOf(discordgo.PermissionSendMessages),
	"PermissionSendTTSMessages":                        reflect.ValueOf(discordgo.PermissionSendTTSMessages),
	"PermissionUseExternalEmojis":                      reflect.ValueOf(discordgo.PermissionUseExternalEmojis),
	"PermissionViewAuditLogs":                          reflect.ValueOf(discordgo.PermissionViewAuditLogs),
	"PermissionVoiceConnect":                           reflect.ValueOf(discordgo.PermissionVoiceConnect),
	"PermissionVoiceDeafenMembers":                     reflect.ValueOf(discordgo.PermissionVoiceDeafenMembers),
	"PermissionVoiceMoveMembers":                       reflect.ValueOf(discordgo.PermissionVoiceMoveMembers),
	"PermissionVoiceMuteMembers":                       reflect.ValueOf(discordgo.PermissionVoiceMuteMembers),
	"PermissionVoiceSpeak":                             reflect.ValueOf(discordgo.PermissionVoiceSpeak),
	"PermissionVoiceUseVAD":                            reflect.ValueOf(discordgo.PermissionVoiceUseVAD),
	"StatusDoNotDisturb":                               reflect.ValueOf(discordgo.StatusDoNotDisturb),
	"StatusIdle":                                       reflect.ValueOf(discordgo.StatusIdle),
	"StatusInvisible":                                  reflect.ValueOf(discordgo.StatusInvisible),
	"StatusOffline":                                    reflect.ValueOf(discordgo.StatusOffline),
	"StatusOnline":                                     reflect.ValueOf(discordgo.StatusOnline),
	"VERSION":                                          reflect.ValueOf(discordgo.VERSION),
	"VerificationLevelHigh":                            reflect.ValueOf(discordgo.VerificationLevelHigh),
	"VerificationLevelLow":                             reflect.ValueOf(discordgo.VerificationLevelLow),
	"VerificationLevelMedium":                          reflect.ValueOf(discordgo.VerificationLevelMedium),
	"VerificationLevelNone":                            reflect.ValueOf(discordgo.VerificationLevelNone),
}
