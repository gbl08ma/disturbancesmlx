// Code generated by github.com/ungerik/pkgreflect and edited by gbl08ma

package main

import (
	"reflect"

	uuid "github.com/satori/go.uuid"
)

var extpkgUUIDTypes = map[string]reflect.Type{
	"Generator": reflect.TypeOf((*uuid.Generator)(nil)).Elem(),
	"NullUUID":  reflect.TypeOf((*uuid.NullUUID)(nil)).Elem(),
	"UUID":      reflect.TypeOf((*uuid.UUID)(nil)).Elem(),
}

var extpkgUUIDFunctions = map[string]reflect.Value{
	"Equal":           reflect.ValueOf(uuid.Equal),
	"FromBytes":       reflect.ValueOf(uuid.FromBytes),
	"FromBytesOrNil":  reflect.ValueOf(uuid.FromBytesOrNil),
	"FromString":      reflect.ValueOf(uuid.FromString),
	"FromStringOrNil": reflect.ValueOf(uuid.FromStringOrNil),
	"Must":            reflect.ValueOf(uuid.Must),
	"NewV1":           reflect.ValueOf(uuid.NewV1),
	"NewV2":           reflect.ValueOf(uuid.NewV2),
	"NewV3":           reflect.ValueOf(uuid.NewV3),
	"NewV4":           reflect.ValueOf(uuid.NewV4),
	"NewV5":           reflect.ValueOf(uuid.NewV5),
}

var extpkgUUIDVariables = map[string]reflect.Value{
	"NamespaceDNS":  reflect.ValueOf(&uuid.NamespaceDNS),
	"NamespaceOID":  reflect.ValueOf(&uuid.NamespaceOID),
	"NamespaceURL":  reflect.ValueOf(&uuid.NamespaceURL),
	"NamespaceX500": reflect.ValueOf(&uuid.NamespaceX500),
	"Nil":           reflect.ValueOf(&uuid.Nil),
}

var extpkgUUIDConsts = map[string]reflect.Value{
	"DomainGroup":      reflect.ValueOf(uuid.DomainGroup),
	"DomainOrg":        reflect.ValueOf(uuid.DomainOrg),
	"DomainPerson":     reflect.ValueOf(uuid.DomainPerson),
	"Size":             reflect.ValueOf(uuid.Size),
	"V1":               reflect.ValueOf(uuid.V1),
	"V2":               reflect.ValueOf(uuid.V2),
	"V3":               reflect.ValueOf(uuid.V3),
	"V4":               reflect.ValueOf(uuid.V4),
	"V5":               reflect.ValueOf(uuid.V5),
	"VariantFuture":    reflect.ValueOf(uuid.VariantFuture),
	"VariantMicrosoft": reflect.ValueOf(uuid.VariantMicrosoft),
	"VariantNCS":       reflect.ValueOf(uuid.VariantNCS),
	"VariantRFC4122":   reflect.ValueOf(uuid.VariantRFC4122),
}
