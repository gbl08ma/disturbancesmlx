// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package website

import "reflect"

var Types = map[string]reflect.Type{
	"ConnectionData": reflect.TypeOf((*ConnectionData)(nil)).Elem(),
	"PageCommons":    reflect.TypeOf((*PageCommons)(nil)).Elem(),
	"Session":        reflect.TypeOf((*Session)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"AboutPage":              reflect.ValueOf(AboutPage),
	"AuthGetSession":         reflect.ValueOf(AuthGetSession),
	"AuthHandler":            reflect.ValueOf(AuthHandler),
	"AuthLogoutHandler":      reflect.ValueOf(AuthLogoutHandler),
	"BaseURL":                reflect.ValueOf(BaseURL),
	"ConfigureRouter":        reflect.ValueOf(ConfigureRouter),
	"DisturbanceListPage":    reflect.ValueOf(DisturbanceListPage),
	"DisturbancePage":        reflect.ValueOf(DisturbancePage),
	"DonatePage":             reflect.ValueOf(DonatePage),
	"Heatmap":                reflect.ValueOf(Heatmap),
	"HomePage":               reflect.ValueOf(HomePage),
	"InitPageCommons":        reflect.ValueOf(InitPageCommons),
	"Initialize":             reflect.ValueOf(Initialize),
	"InternalPage":           reflect.ValueOf(InternalPage),
	"LinePage":               reflect.ValueOf(LinePage),
	"LookingGlass":           reflect.ValueOf(LookingGlass),
	"MapPage":                reflect.ValueOf(MapPage),
	"PrivacyPolicyPage":      reflect.ValueOf(PrivacyPolicyPage),
	"RSSFeed":                reflect.ValueOf(RSSFeed),
	"ReadStationConnections": reflect.ValueOf(ReadStationConnections),
	"ReadStationTrivia":      reflect.ValueOf(ReadStationTrivia),
	"ReloadTemplates":        reflect.ValueOf(ReloadTemplates),
	"ReportPage":             reflect.ValueOf(ReportPage),
	"SessionStore":           reflect.ValueOf(SessionStore),
	"ShowOfficialDataOnly":   reflect.ValueOf(ShowOfficialDataOnly),
	"StationPage":            reflect.ValueOf(StationPage),
	"TermsPage":              reflect.ValueOf(TermsPage),
}

var Variables = map[string]reflect.Value{}

var Consts = map[string]reflect.Value{
	"CSRFcookieName": reflect.ValueOf(CSRFcookieName),
	"CSRFfieldName":  reflect.ValueOf(CSRFfieldName),
	"DEBUG":          reflect.ValueOf(DEBUG),
	"MLnetworkID":    reflect.ValueOf(MLnetworkID),
}
